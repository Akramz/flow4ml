# Random baseline for Earth Water Surface detection

# Task type
task_type: "segmentation"  # This is a segmentation task

# Model parameters
model_name: "random"  # Random model that outputs random predictions
backbone_name: null  # No backbone needed for random model
weight_init: "random"  # Random initialization

# Input/output parameters
in_channels: 9  # Original 6 bands + 3 spectral indices (NDWI1, NDWI2, NDVI)
out_channels: 2  # Binary segmentation (water/not water)
image_size: [512, 512]  # Image patch size from the example

# Optimizer parameters
optimizer: "adam"  # Not really used for random model
lr: 0.0001  # From example
weight_decay: 0.01  # From example
scheduler: "none"

# Loss function
loss: "ce"  # For segmentation task

# Training parameters
batch_size: 4  # From example
max_epochs: 2  # Minimal epochs for demonstration
seed: 42  # Random seed for reproducibility
gpu_ids: []  # GPU ID to use
val_ratio: 0.2  # Validation split ratio
precision: "32-true"  # Added precision parameter (32-bit for CPU training)
num_workers: 0  # Number of workers for data loading

# Experiment parameters
experiment_short_name: "random_water_surface"
log_dir: "logs/"
output_dir: "model_runs/"
overwrite: true  # Overwrite existing experiment
early_stop: false  # No need for early stopping with random model

# Data parameters
dataset: "earth_surface_water"
dataset_url: "https://hf.co/datasets/cordmaur/earth_surface_water/resolve/main/earth_surface_water.zip"
# Define normalization and spectral indices
spectral_indices: 
  - type: "NDWI"
    index_green: 1
    index_nir: 3
  - type: "NDWI"
    index_green: 1
    index_nir: 5
  - type: "NDVI"
    index_red: 2
    index_nir: 3
# Mean and std should be calculated dynamically at runtime
normalize: true